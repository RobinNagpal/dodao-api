extend type Query {
  projectByteCollections(projectId: String!): [ProjectByteCollection!]!
  projectByteCollection(projectId: String!, byteCollectionId: String!): ProjectByteCollection!
}

extend type Mutation {
  upsertProjectByteCollection(projectId: String!, input: UpsertProjectByteCollectionInput!): ProjectByteCollection!
  updateArchivedStatusOfProjectByteCollection(projectId: String!, byteCollectionId: String!, archived: Boolean!): ProjectByteCollection!
  updateSeoOfProjectByteCollection(projectId: String!, seoMeta: SEOMetaInput): ProjectByteCollection!
}

type ProjectByteCollection {
  id: String!
  name: String!
  description: String!
  byteIds: [String!]!
  bytes: [ByteCollectionByte!]!
  status: String!
  archived: Boolean!
  seoMeta: SEOMeta
  priority: Int!
  videoUrl: String
  videoAspectRatio: String
}

input UpsertProjectByteCollectionInput {
  id: String!
  name: String!
  description: String!
  projectId: String!
  byteIds: [String!]!
  status: String!
  seoMeta: SEOMetaInput
  priority: Int!
  videoUrl: String
  videoAspectRatio: String
}
