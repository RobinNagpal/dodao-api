extend type Query {
  chatbotCategories(spaceId: String!): [ChatbotCategory!]!

  chatbotFAQs(spaceId: String!): [ChatbotFAQ!]!

  chatbotUserQuestions(spaceId: String!): [ChatbotUserQuestion!]!
}

extend type Mutation {
  upsertChatbotCategory(spaceId: String!, input: UpsertChatbotCategoryInput!): ChatbotCategory!

  upsertChatbotFAQ(spaceId: String!, input: UpsertChatbotFAQInput!): ChatbotFAQ!

  upsertChatbotUserQuestion(spaceId: String!, input: UpsertChatbotUserQuestionInput!): ChatbotUserQuestion!

  deleteChatbotCategory(spaceId: String!, id: String!): Boolean!

  deleteChatbotFAQ(spaceId: String!, id: String!): Boolean!

  deleteChatbotUserQuestion(spaceId: String!, id: String!): Boolean!
}

type ChatbotSubcategory {
  name: String!
  key: String!
  description: String!
}

type ChatbotCategory {
  id: String!
  name: String!
  key: String!
  description: String!
  subCategories: [ChatbotSubcategory!]!
  priority: Int!
}

type ChatbotFAQ {
  id: String!
  spaceId: String!
  question: String!
  answer: String!
  url: String!
  categories: [String!]
  subCategories: [String!]
  priority: Int!
}

type ChatbotUserQuestion {
  id: String!
  spaceId: String!
  question: String!
  categories: [String!]
  subCategories: [String!]
}

input UpsertChatbotSubcategoryInput {
  name: String!
  key: String!
  description: String!
}

input UpsertChatbotCategoryInput {
  id: String!
  name: String!
  key: String!
  description: String!
  subCategories: [UpsertChatbotSubcategoryInput!]!
  priority: Int!
}

input UpsertChatbotFAQInput {
  id: String!
  spaceId: String!
  question: String!
  answer: String!
  url: String!
  categories: [String!]
  subCategories: [String!]
  priority: Int!
}

input UpsertChatbotUserQuestionInput {
  id: String!
  spaceId: String!
  question: String!
  categories: [String!]
  subCategories: [String!]
}
