extend type Query {
  websiteScrapingInfos(spaceId: String!): [WebsiteScrapingInfo!]!
  siteScrapingRuns(spaceId: String!, websiteScrapingInfoId: String!): [SiteScrapingRun!]!
  scrapedUrlInfos(spaceId: String!, websiteScrapingInfoId: String!): [ScrapedUrlInfo!]!
  scrapedUrlInfo(spaceId: String!, scrapedUrlInfoId: String!): ScrapedUrlInfo!
}

extend type Mutation {
  createWebsiteScrapingInfo(
    spaceId: String!
    baseUrl: String!
    scrapingStartUrl: String!
    ignoreHashInUrl: Boolean!
    ignoreQueryParams: Boolean!
  ): WebsiteScrapingInfo!

  editWebsiteScrapingInfo(
    spaceId: String!
    websiteScrapingInfoId: String!
    baseUrl: String!
    scrapingStartUrl: String!
    ignoreHashInUrl: Boolean!
    ignoreQueryParams: Boolean!
  ): WebsiteScrapingInfo!

  triggerSiteScrapingRun(spaceId: String!, websiteScrapingInfoId: String!): SiteScrapingRun!
}

type WebsiteScrapingInfo {
  id: String!
  spaceId: String!
  baseUrl: String!
  scrapingStartUrl: String!
  ignoreHashInUrl: Boolean!
  ignoreQueryParams: Boolean!
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO!
  scrapingRuns: [SiteScrapingRun!]!
  scrapedUrlInfos: [ScrapedUrlInfo!]!
}

type SiteScrapingRun {
  id: String!
  spaceId: String!
  websiteScrapingInfoId: String!
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO!
  scrapingStartUrl: String!
  scrapingRunDate: DateTimeISO!
  status: String!
  websiteScrapingInfo: WebsiteScrapingInfo!
}

type ScrapedUrlInfo {
  id: String!
  spaceId: String!
  websiteScrapingInfoId: String!
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO!
  url: String!
  textSample: String!
  text: String!
  textLength: Int!
}
