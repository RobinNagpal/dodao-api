extend type Query {
  space(id: String, domain: String): Space

  spaceDiscordGuild(spaceId: String!): Any

  spaces: [Space!]

  route53Records: [Route53Record!]!

  vercelDomainRecords: [VercelDomain!]!
}

extend type Mutation {
  createSpace(spaceInput: UpsertSpaceInput!): Space!

  updateSpace(spaceInput: UpsertSpaceInput!): Space!

  updateGuideSettings(spaceId: String!, input: GuideSettingsInput!): Space!

  updateAuthSettings(spaceId: String!, input: AuthSettingsInput!): Space!

  updateSocialSettings(spaceId: String!, input: SocialSettingsInput!): Space!

  updateByteSettings(spaceId: String!, input: ByteSettingsInput!): Space!

  addDiscordCredentials(spaceId: String!, code: String!, redirectUri: String!): Space!

  upsertGnosisSafeWallets(spaceId: String!, wallets: [GnosisSafeWalletInput!]!): Space!

  upsertSpaceInviteLinks(spaceId: String!, spaceInviteArgs: SpaceInviteArgs!): Space!

  upsertProjectGalaxyAccessToken(spaceId: String!, accessToken: String!): Space!

  upsertSpaceFeatures(spaceId: String!, features: [String!]!): Space!

  upsertSpaceAcademyRepository(spaceId: String!, academyRepository: String!): Space!

  createSignedUrl(spaceId: String!, input: CreateSignedUrlInput!): String!

  reloadAcademyRepository(spaceId: String!): Boolean!

  sendEmail(input: SendEmailInput!): Boolean!

  upsertSpaceLoaderInfo(spaceId: String!, input: SpaceLoadersInfoInput!): Space!

  dropPineconeNamespace(spaceId: String!): Boolean!

  copyAllBytesFromGitToDatabase: Boolean!

  updateThemeColors(spaceId: ID!, themeColors: ThemeColorsInput!): Space!
}

type Space {
  id: String!
  admins: [String!]!
  adminUsernames: [String!]!
  adminUsernamesV1: [UsernamesByNames!]!
  avatar: String
  creator: String!
  features: [String!]!
  name: String!
  skin: String!
  spaceIntegrations: SpaceIntegrations
  inviteLinks: SpaceInviteLinks
  domains: [String!]!
  botDomains: [String!]
  authSettings: AuthSettings!
  guideSettings: GuideSettings!
  socialSettings: SocialSettings!
  byteSettings: ByteSettings!
  themeColors: ThemeColors
}

type ThemeColors {
  primaryColor: String
  bgColor: String
  textColor: String
  linkColor: String
  headingColor: String
  borderColor: String
  blockBg: String
}

input ThemeColorsInput {
  primaryColor: String!
  bgColor: String!
  textColor: String!
  linkColor: String!
  headingColor: String!
  borderColor: String!
  blockBg: String!
}

type AuthSettings {
  enableLogin: Boolean
  loginOptions: [String!]
}

type GuideSettings {
  showIncorrectOnCompletion: Boolean
  showIncorrectAfterEachStep: Boolean
  askForLoginToSubmit: Boolean
  captureBeforeAndAfterRating: Boolean @deprecated(reason: "Use captureRating instead")
  captureRating: Boolean
  showCategoriesInSidebar: Boolean
}

type ByteSettings {
  askForLoginToSubmit: Boolean
  captureBeforeAndAfterRating: Boolean @deprecated(reason: "Use captureRating instead")
  captureRating: Boolean
  showCategoriesInSidebar: Boolean
}

type UsernamesByNames {
  username: String!
  nameOfTheUser: String!
}

type SpaceIntegrations {
  discordGuildId: String
  projectGalaxyTokenLastFour: String
  gnosisSafeWallets: [GnosisSafeWallet!]
  gitGuideRepositories: [SpaceGitRepository!]
  academyRepository: String
  loadersInfo: SpaceLoadersInfo
}

type GnosisSafeWallet {
  id: String!
  chainId: Int!
  order: Int!
  tokenContractAddress: String!
  walletAddress: String!
  walletName: String!
}

type SpaceGitRepository {
  # github or gitlab
  gitRepoType: String
  authenticationToken: String
  repoUrl: String!
}

type SpaceFilters {
  minScore: Float
  onlyMembers: Boolean
}

type SpaceInviteLinks {
  discordInviteLink: String
  showAnimatedButtonForDiscord: Boolean
  telegramInviteLink: String
  showAnimatedButtonForTelegram: Boolean
}

type SocialSettings {
  linkedSharePdfBackgroundImage: String
}

type Route53Record {
  name: String
  type: String
  ttl: Int
  records: [String]
}

type VercelDomain {
  name: String!
  apexName: String!
  projectId: String!
  redirect: String
  gitBranch: String
  updatedAt: Int
  createdAt: Int
  verified: Boolean!
}

type SpaceLoadersInfo {
  discourseUrl: String
  discordServerId: String
}

input SpaceWhere {
  id: String
  id_in: [String]
}

input GnosisSafeWalletInput {
  id: String!
  chainId: Int!
  order: Int!
  tokenContractAddress: String!
  walletAddress: String!
  walletName: String!
}

input SpaceGitRepositoryInput {
  # github or gitlab
  gitRepoType: String

  authenticationToken: String

  repoUrl: String!
}

input SpaceInviteArgs {
  discordInviteLink: String
  showAnimatedButtonForDiscord: Boolean
  telegramInviteLink: String
  showAnimatedButtonForTelegram: Boolean
}

input CreateSignedUrlInput {
  imageType: String!
  contentType: String!
  objectId: String!
  name: String!
}

input UpsertSpaceInput {
  id: String!
  admins: [String!]!
  adminUsernames: [String!]!
  adminUsernamesV1: [UsernamesByNamesInput!]!
  avatar: String!
  creator: String!
  features: [String!]!
  name: String!
  skin: String!
  inviteLinks: SpaceInviteLinksInput!
  spaceIntegrations: SpaceIntegrationsInput!
  domains: [String!]!
  botDomains: [String!]
}

input SpaceIntegrationsInput {
  discordGuildId: String
  projectGalaxyTokenLastFour: String
  gnosisSafeWallets: [GnosisSafeWalletInput!]!
  gitGuideRepositories: [SpaceGitRepositoryInput!]!
  academyRepository: String
}

input SpaceInviteLinksInput {
  discordInviteLink: String
  showAnimatedButtonForDiscord: Boolean
  telegramInviteLink: String
  showAnimatedButtonForTelegram: Boolean
}

input GuideSettingsInput {
  showIncorrectOnCompletion: Boolean
  showIncorrectAfterEachStep: Boolean
  askForLoginToSubmit: Boolean
  captureRating: Boolean
  showCategoriesInSidebar: Boolean
}

input SocialSettingsInput {
  linkedSharePdfBackgroundImage: String
}

input AuthSettingsInput {
  enableLogin: Boolean!
  loginOptions: [String!]!
}

input ByteSettingsInput {
  askForLoginToSubmit: Boolean
  captureRating: Boolean
  showCategoriesInSidebar: Boolean
}

input UsernamesByNamesInput {
  username: String!
  nameOfTheUser: String!
}

input SendEmailInput {
  firstName: String!
  lastName: String!
  email: String!
  message: String!
}

input SpaceLoadersInfoInput {
  discourseUrl: String
  discordServerId: String
}
