extend type Query {
  byte(spaceId: String!, byteId: String!, includeDraft: Boolean): Byte!
  bytes(spaceId: String!): [Byte!]!
  byteSocialShare(spaceId: String!, byteId: String!): ByteSocialShare
  byteRating(spaceId: String, ratingUuid: String!): [ByteRating!]!
  byteRatings(spaceId: String!, byteId: String!): [ByteRating!]!
  consolidatedByteRating(spaceId: String!, byteId: String!): ConsolidatedByteRating
  consolidatedByteRatingsForSpace(spaceId: String!): ConsolidatedByteRating
}

extend type Mutation {
  upsertByte(spaceId: String!, input: UpsertByteInput!): Byte!
  generateSharablePdf(spaceId: String!, byteId: String!): String!
  deleteByte(spaceId: String!, byteId: String!): Boolean!
  upsertByteSocialShare(spaceId: String!, input: UpsertByteSocialShareInput!): ByteSocialShare!
  upsertByteRating(spaceId: String!, upsertByteRatingInput: UpsertByteRatingInput!): ByteRating!
}

enum ByteStyle {
  CardAndCircleProgress
  CarouselWithProgressBars
}

type Byte {
  postSubmissionStepContent: String
  content: String!
  created: String!
  id: String!
  name: String!
  showIncorrectOnCompletion: Boolean!
  completionScreen: CompletionScreen
  steps: [ByteStep!]!
  admins: [String!]!
  tags: [String!]!
  priority: Int!
  videoUrl: String
  aspectRatio: String
  byteStyle: String
}

type ByteQuestion {
  answerKeys: [String!]!
  choices: [QuestionChoice!]!
  content: String!
  type: String!
  uuid: String!
  explanation: String!
}

type ByteUserInput {
  label: String!
  type: String!
  required: Boolean!
  uuid: String!
}

union ByteStepItem = ByteQuestion | ByteUserInput | UserDiscordConnect

type ByteStep {
  content: String!
  name: String!
  stepItems: [ByteStepItem!]!
  uuid: String!
  imageUrl: String
}

type ByteLinkedinPdfContentStep {
  content: String!
  name: String!
}

type ByteLinkedinPdfContent {
  title: String!
  excerpt: String!
  steps: [ByteLinkedinPdfContentStep!]!
}

type ByteSocialShare {
  uuid: String!
  byteId: String!
  spaceId: String!
  linkedinPdfContent: ByteLinkedinPdfContent
  linkedInImages: [String!]
  linkedInPdf: String
  twitterImage: String
}

type ByteFeedback {
  ux: Boolean
  content: Boolean
}

type ByteRating {
  ratingUuid: String!
  byteId: String!
  spaceId: String!
  userId: String
  ipAddress: String
  skipRating: Boolean
  rating: Int
  positiveFeedback: ByteFeedback
  negativeFeedback: ByteFeedback
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO!
  username: String
}

type ConsolidatedByteRating {
  avgRating: Float!
  positiveRatingDistribution: ByteRatingDistribution!
  negativeRatingDistribution: ByteRatingDistribution!
  positiveFeedbackCount: Int!
  negativeFeedbackCount: Int!
  ratingFeedbackCount: Int!
}

type ByteRatingDistribution {
  ux: Float!
  content: Float!
}

type CompletionScreenItem {
  label: String!
  link: String!
  uuid: String!
}

type CompletionScreen {
  content: String!
  name: String!
  items: [CompletionScreenItem!]!
  uuid: String!
  imageUrl: String
}

type CompletionScreenItem {
  label: String!
  link: String!
  uuid: String!
}

# union CompletionScreenItem = ActionButton

input CompletionScreenItemInput {
  label: String!
  link: String!
  uuid: String!
}

input CompletionScreenInput {
  content: String!
  name: String!
  items: [CompletionScreenItemInput!]!
  uuid: String!
  imageUrl: String
}

input ByteStepInput {
  content: String!
  name: String!
  stepItems: [StepItemInputGenericInput!]!
  uuid: String!
  imageUrl: String
}

input UpsertByteInput {
  content: String!
  id: String!
  name: String!
  steps: [ByteStepInput!]!
  thumbnail: String
  admins: [String!]!
  tags: [String!]!
  priority: Int!
  created: String!
  videoUrl: String
  aspectRatio: String
  byteStyle: String
  completionScreen: CompletionScreenInput
}

input ByteLinkedinPdfContentStepInput {
  content: String!
  name: String!
}

input ByteLinkedinPdfContentInput {
  title: String!
  excerpt: String!
  steps: [ByteLinkedinPdfContentStepInput!]!
}

input UpsertByteSocialShareInput {
  byteId: String!
  spaceId: String!
  linkedinPdfContent: ByteLinkedinPdfContentInput
  linkedInImages: [String!]
  linkedInPdf: String
  twitterImage: String
}

input ByteFeedbackInput {
  ux: Boolean
  content: Boolean
}

input UpsertByteRatingInput {
  ratingUuid: String!
  byteId: String!
  userId: String
  rating: Int
  spaceId: String!
  positiveFeedback: ByteFeedbackInput
  negativeFeedback: ByteFeedbackInput
  skipRating: Boolean
}
